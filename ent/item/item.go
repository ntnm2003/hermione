// Code generated by ent, DO NOT EDIT.

package item

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the item type in the database.
	Label = "item"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldItem holds the string denoting the item field in the database.
	FieldItem = "item"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldRemainingAmount holds the string denoting the remaining_amount field in the database.
	FieldRemainingAmount = "remaining_amount"
	// FieldSoldAmount holds the string denoting the sold_amount field in the database.
	FieldSoldAmount = "sold_amount"
	// FieldExp holds the string denoting the exp field in the database.
	FieldExp = "exp"
	// FieldVendorID holds the string denoting the vendor_id field in the database.
	FieldVendorID = "vendor_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeVendors holds the string denoting the vendors edge name in mutations.
	EdgeVendors = "vendors"
	// Table holds the table name of the item in the database.
	Table = "items"
	// VendorsTable is the table that holds the vendors relation/edge.
	VendorsTable = "items"
	// VendorsInverseTable is the table name for the Vendor entity.
	// It exists in this package in order to avoid circular dependency with the "vendor" package.
	VendorsInverseTable = "vendors"
	// VendorsColumn is the table column denoting the vendors relation/edge.
	VendorsColumn = "vendor_id"
)

// Columns holds all SQL columns for item fields.
var Columns = []string{
	FieldID,
	FieldItem,
	FieldPrice,
	FieldRemainingAmount,
	FieldSoldAmount,
	FieldExp,
	FieldVendorID,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// ItemValidator is a validator for the "item" field. It is called by the builders before save.
	ItemValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
